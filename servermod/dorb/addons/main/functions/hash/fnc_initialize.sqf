#include "script_component.hpp"
/**
 * Author: Dorbedo
 * initializes the hash_system
 *
 * Arguments:
 * Nothing
 *
 * Return Value:
 * Nohting
 *
 */

If !(isNil "DORB_HASH_GUARD") exitWith {};

DORB_HASH_GUARD = true;

DORB_HASH_POOL = [];
DORB_HASH_TO_DELETE = [];
DORB_HASH_CREATED_NEW = [];
DORB_HASH_CREATED_NEW_GLOBAL = [];
DORB_HASH_CREATED = [];
DORB_HASH_COLLECTOR_COLLECT = false;
DORB_HASH_COLLECTOR_ID = 0;
DORB_HASH_COLLECTOR_NAMESPACES = [];
DORB_HASH_COLLECTOR_NAMESPACES_ID = 0;
DORB_HASH_COLLECTOR_VARIABLES = [];
DORB_HASH_COLLECTOR_ARRAYS = [];
DORB_HASH_COLLECTOR_FOUND = [];
DORB_HASH_COLLECTOR_IGNORE = [QUOTE(DORB_HASH_POOL),QUOTE(DORB_HASH_TO_DELETE),QUOTE(DORB_HASH_CREATED_NEW),QUOTE(DORB_HASH_CREATED_NEW_GLOBAL),QUOTE(DORB_HASH_CREATED),QUOTE(DORB_HASH_COLLECTOR_HANDLER),QUOTE(DORB_HASH_COLLECTOR_NEXTEXEC),QUOTE(DORB_HASH_COLLECTOR_NAMESPACES),QUOTE(DORB_HASH_COLLECTOR_VARIABLES),QUOTE(DORB_HASH_COLLECTOR_ARRAYS),QUOTE(DORB_HASH_COLLECTOR_FOUND),QUOTE(DORB_HASH_COLLECTOR_ID),QUOTE(DORB_HASH_COLLECTOR_IGNORE)] apply {toLower _x};
for "_i" from 1 to ([150,500] select isServer) do {
    DORB_HASH_POOL pushBack (DORB_HASH_SYS_CREATE_LOCAL);
};
[FUNC(hash_monitor), (1/3),[]] call CBA_fnc_addPerFrameHandler;
[{If (DORB_HASH_COLLECTOR_COLLECT) then {[] call FUNC(hash_collector);};},(1/4),[]] call CBA_fnc_addPerFrameHandler;

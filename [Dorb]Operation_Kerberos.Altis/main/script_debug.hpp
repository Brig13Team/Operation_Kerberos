/* -------------------------------------------
Description:
    !! Modifies the CBA-Log function if enabled
    Adds some aditional Makros

Author:
    Dorbedo
------------------------------------------- */
#ifndef PART
	#define PART main
#endif

#ifdef DEBUGMODUS_FULL
	#define TRACE_1(MESSAGE,A) [QUOTE(ADDON),QUOTE(PART),PFORMAT_1(MESSAGE,A),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACE_2(MESSAGE,A,B) [QUOTE(ADDON),QUOTE(PART),PFORMAT_2(MESSAGE,A,B),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACE_3(MESSAGE,A,B,C) [QUOTE(ADDON),QUOTE(PART),PFORMAT_3(MESSAGE,A,B,C),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACE_4(MESSAGE,A,B,C,D) [QUOTE(ADDON),QUOTE(PART),PFORMAT_4(MESSAGE,A,B,C,D),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACE_5(MESSAGE,A,B,C,D,E) [QUOTE(ADDON),QUOTE(PART),PFORMAT_5(MESSAGE,A,B,C,D,E),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACE_6(MESSAGE,A,B,C,D,E,F) [QUOTE(ADDON),QUOTE(PART),PFORMAT_6(MESSAGE,A,B,C,D,E,F),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACE_7(MESSAGE,A,B,C,D,E,F,G) [QUOTE(ADDON),QUOTE(PART),PFORMAT_7(MESSAGE,A,B,C,D,E,F,G),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACE_8(MESSAGE,A,B,C,D,E,F,G,H) [QUOTE(ADDON),QUOTE(PART),PFORMAT_8(MESSAGE,A,B,C,D,E,F,G,H),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACE_9(MESSAGE,A,B,C,D,E,F,G,H,I) [QUOTE(ADDON),QUOTE(PART),PFORMAT_9(MESSAGE,A,B,C,D,E,F,G,H,I),THIS_FILE_, __LINE__] call EFUNC(main,debug_putinlog)
	#define TRACEV_1(VAR1) LOG_1(VAR1)
	#define TRACEV_2(VAR1,VAR2) LOG_2(VAR1,VAR2)
	#define TRACEV_3(VAR1,VAR2,VAR3) LOG_3(VAR1,VAR2,VAR3)
	#define TRACEV_4(VAR1,VAR2,VAR3,VAR4) LOG_4(VAR1,VAR2,VAR3,VAR4)
	#define TRACEV_5(VAR1,VAR2,VAR3,VAR4,VAR5) LOG_5(VAR1,VAR2,VAR3,VAR4,VAR5)
	#define TRACEV_6(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6) LOG_6(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6)
	#define TRACEV_7(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7) LOG_7(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7)
	#define TRACEV_8(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8) LOG_8(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8)
	#define TRACEV_9(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8,VAR9) LOG_9(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8,VAR9)
	#define EXPLODE_1(ARRAY,A) EXPLODE_1_SYS(ARRAY,A); TRACEV_1(A)
	#define EXPLODE_1_PVT(ARRAY,A) ARRAY params [#A]; TRACEV_1(A)
	#define EXPLODE_2(ARRAY,A,B) EXPLODE_2_SYS(ARRAY,A,B); TRACEV_2(A,B)
	#define EXPLODE_2_PVT(ARRAY,A,B) ARRAY params [#A,#B]; TRACEV_2(A,B)
	#define EXPLODE_3(ARRAY,A,B,C) EXPLODE_3_SYS(ARRAY,A,B,C); TRACEV_3(A,B,C)
	#define EXPLODE_3_PVT(ARRAY,A,B,C) ARRAY params [#A,#B,#C]; TRACEV_3(A,B,C)
	#define EXPLODE_4(ARRAY,A,B,C,D) EXPLODE_4_SYS(ARRAY,A,B,C,D); TRACEV_4(A,B,C,D)
	#define EXPLODE_4_PVT(ARRAY,A,B,C,D) ARRAY params [#A,#B,#C,#D]; TRACEV_4(A,B,C,D)
	#define EXPLODE_5(ARRAY,A,B,C,D,E) EXPLODE_5_SYS(ARRAY,A,B,C,D,E); TRACEV_5(A,B,C,D,E)
	#define EXPLODE_5_PVT(ARRAY,A,B,C,D,E) ARRAY params [#A,#B,#C,#D,#E]; TRACEV_5(A,B,C,D,E)
	#define EXPLODE_6(ARRAY,A,B,C,D,E,F) EXPLODE_6_SYS(ARRAY,A,B,C,D,E,F); TRACEV_6(A,B,C,D,E,F)
	#define EXPLODE_6_PVT(ARRAY,A,B,C,D,E,F) ARRAY params [#A,#B,#C,#D,#E,#F]; TRACEV_6(A,B,C,D,E,F)
	#define EXPLODE_7(ARRAY,A,B,C,D,E,F,G) EXPLODE_7_SYS(ARRAY,A,B,C,D,E,F,G); TRACEV_7(A,B,C,D,E,F,G)
	#define EXPLODE_7_PVT(ARRAY,A,B,C,D,E,F,G) ARRAY params [#A,#B,#C,#D,#E,#F,#G]; TRACEV_7(A,B,C,D,E,F,G)
	#define EXPLODE_8(ARRAY,A,B,C,D,E,F,G,H) EXPLODE_8_SYS(ARRAY,A,B,C,D,E,F,G,H); TRACEV_8(A,B,C,D,E,F,G,H)
	#define EXPLODE_8_PVT(ARRAY,A,B,C,D,E,F,G,H) ARRAY params [#A,#B,#C,#D,#E,#F,#G,#H]; TRACEV_8(A,B,C,D,E,F,G,H)
	#define EXPLODE_9(ARRAY,A,B,C,D,E,F,G,H,I) EXPLODE_9_SYS(ARRAY,A,B,C,D,E,F,G,H,I); TRACEV_9(A,B,C,D,E,F,G,H,I)
	#define EXPLODE_9_PVT(ARRAY,A,B,C,D,E,F,G,H,I) ARRAY params [#A,#B,#C,#D,#E,#F,#G,#H,#I]; TRACEV_9(A,B,C,D,E,F,G,H,I)
	#define CHECK(CONDITION) if (CONDITION) exitWith {ERROR("CHECK-FAILED");};
#else
	#define TRACE_1(MESSAGE,A) /* disabled */
	#define TRACE_2(MESSAGE,A,B) /* disabled */
	#define TRACE_3(MESSAGE,A,B,C) /* disabled */
	#define TRACE_4(MESSAGE,A,B,C,D) /* disabled */
	#define TRACE_5(MESSAGE,A,B,C,D,E) /* disabled */
	#define TRACE_6(MESSAGE,A,B,C,D,E,F) /* disabled */
	#define TRACE_7(MESSAGE,A,B,C,D,E,F,G) /* disabled */
	#define TRACE_8(MESSAGE,A,B,C,D,E,F,G,H) /* disabled */
	#define TRACE_9(MESSAGE,A,B,C,D,E,F,G,H,I) /* disabled */
	#define TRACEV_1(VAR1) /* disabled */
	#define TRACEV_2(VAR1,VAR2) /* disabled */
	#define TRACEV_3(VAR1,VAR2,VAR3) /* disabled */
	#define TRACEV_4(VAR1,VAR2,VAR3,VAR4) /* disabled */
	#define TRACEV_5(VAR1,VAR2,VAR3,VAR4,VAR5) /* disabled */
	#define TRACEV_6(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6) /* disabled */
	#define TRACEV_7(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7) /* disabled */
	#define TRACEV_8(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8) /* disabled */
	#define TRACEV_9(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8,VAR9) /* disabled */
#endif
#define DEBUG_MODE_NORMAL
#ifdef DEBUG_MODE_NORMAL
    #define LOG(STRING) ["LOG",QUOTE(ADDON),QUOTE(PART),STRING,__FILE__, __LINE__] call EFUNC(main,debug_putinlog)

    #define FORMAT_10(STR,ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,ARG9,ARG10) format[STR, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8, ARG9, ARG10]
    #define FORMAT_12(STR,ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,ARG9,ARG10,ARG11,ARG12) format[STR, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8, ARG9, ARG10, ARG11, ARG12]
    #define FORMAT_14(STR,ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,ARG9,ARG10,ARG11,ARG12,ARG13,ARG14) format[STR, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8, ARG9, ARG10, ARG11, ARG12, ARG13, ARG14]
    #define FORMAT_16(STR,ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,ARG9,ARG10,ARG11,ARG12,ARG13,ARG14,ARG15,ARG16) format[STR, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8, ARG9, ARG10, ARG11, ARG12, ARG13, ARG14, ARG15, ARG16]
	#define FORMAT_18(STR,ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,ARG9,ARG10,ARG11,ARG12,ARG13,ARG14,ARG15,ARG16,ARG17,ARG18) format[STR, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8, ARG9, ARG10, ARG11, ARG12, ARG13, ARG14, ARG15, ARG16, ARG17, ARG18]
    #define LOG_1(VAR1) LOG(FORMAT_2("%1 = %2",QUOTE(VAR1),(VAR1)))
    #define LOG_2(VAR1,VAR2) LOG(FORMAT_4("%1 = %2 \n %3 = %4",QUOTE(VAR1),(VAR1),QUOTE(VAR2),(VAR2)))
    #define LOG_3(VAR1,VAR2,VAR3) LOG(FORMAT_6("%1 = %2 \n %3 = %4 \n %5 = %6",QUOTE(VAR1),(VAR1),QUOTE(VAR2),(VAR2),QUOTE(VAR3),(VAR3)))
    #define LOG_4(VAR1,VAR2,VAR3,VAR4) LOG(FORMAT_8("%1 = %2 \n %3 = %4 \n %5 = %6 \n %7 = %8",QUOTE(VAR1),(VAR1),QUOTE(VAR2),(VAR2),QUOTE(VAR3),(VAR3),QUOTE(VAR4),(VAR4)))
    #define LOG_5(VAR1,VAR2,VAR3,VAR4,VAR5) LOG(FORMAT_10("%1 = %2 \n %3 = %4 \n %5 = %6 \n %7 = %8 \n %9 = %10",QUOTE(VAR1),(VAR1),QUOTE(VAR2),(VAR2),QUOTE(VAR3),(VAR3),QUOTE(VAR4),(VAR4),QUOTE(VAR5),(VAR5)))
    #define LOG_6(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6) LOG(FORMAT_12("%1 = %2 \n %3 = %4 \n %5 = %6 \n %7 = %8 \n %9 = %10 \n %11 = %12",QUOTE(VAR1),(VAR1),QUOTE(VAR2),(VAR2),QUOTE(VAR3),(VAR3),QUOTE(VAR4),(VAR4),QUOTE(VAR5),(VAR5),QUOTE(VAR6),(VAR6)))
    #define LOG_7(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7) LOG(FORMAT_14("%1 = %2 \n %3 = %4 \n %5 = %6 \n %7 = %8 \n %9 = %10 \n %11 = %12 \n %13 = %14",QUOTE(VAR1),(VAR1),QUOTE(VAR2),(VAR2),QUOTE(VAR3),(VAR3),QUOTE(VAR4),(VAR4),QUOTE(VAR5),(VAR5),QUOTE(VAR6),(VAR6),QUOTE(VAR7),(VAR7)))
    #define LOG_8(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8) LOG(FORMAT_16("%1 = %2 \n %3 = %4 \n %5 = %6 \n %7 = %8 \n %9 = %10 \n %11 = %12 \n %13 = %14 \n %15 = %16",QUOTE(VAR1),(VAR1),QUOTE(VAR2),(VAR2),QUOTE(VAR3),(VAR3),QUOTE(VAR4),(VAR4),QUOTE(VAR5),(VAR5),QUOTE(VAR6),(VAR6),QUOTE(VAR7),(VAR7),QUOTE(VAR8),(VAR8)))
	#define LOG_8(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8,VAR9) LOG(FORMAT_18("%1 = %2 \n %3 = %4 \n %5 = %6 \n %7 = %8 \n %9 = %10 \n %11 = %12 \n %13 = %14 \n %15 = %16 \n %17 = %18",QUOTE(VAR1),(VAR1),QUOTE(VAR2),(VAR2),QUOTE(VAR3),(VAR3),QUOTE(VAR4),(VAR4),QUOTE(VAR5),(VAR5),QUOTE(VAR6),(VAR6),QUOTE(VAR7),(VAR7),QUOTE(VAR8),(VAR8),QUOTE(VAR9),(VAR9)))
	
	#define WARNING(VAR) ["WARNING",QUOTE(ADDON),QUOTE(PART),VAR,__FILE__, __LINE__] call EFUNC(main,debug_putinlog)
#else
    #define LOG_1(VAR1) /*disabled*/
    #define LOG_2(VAR1,VAR2) /*disabled*/
    #define LOG_3(VAR1,VAR2,VAR3) /*disabled*/
    #define LOG_4(VAR1,VAR2,VAR3,VAR4) /*disabled*/
    #define LOG_5(VAR1,VAR2,VAR3,VAR4,VAR5) /*disabled*/
    #define LOG_6(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6) /*disabled*/
    #define LOG_7(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7) /*disabled*/
    #define LOG_8(VAR1,VAR2,VAR3,VAR4,VAR5,VAR6,VAR7,VAR8) /*disabled*/
	#define WARNING(VAR) /*disabled*/
#endif


#ifdef DEBUG_MODE_MINIMAL
    #define ERROR(VAR) ["ERROR",QUOTE(ADDON),QUOTE(PART),VAR,__FILE__, __LINE__] call EFUNC(main,debug_putinlog)
#else
	#define ERROR(VAR) /*disabled*/
#endif